{"remainingRequest":"C:\\Users\\86183\\Desktop\\客中行\\While-Journey-main\\Page Design\\zyx_pc_web\\foodies\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\86183\\Desktop\\客中行\\While-Journey-main\\Page Design\\zyx_pc_web\\foodies\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\86183\\Desktop\\客中行\\While-Journey-main\\Page Design\\zyx_pc_web\\foodies\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86183\\Desktop\\客中行\\While-Journey-main\\Page Design\\zyx_pc_web\\foodies\\src\\views\\Home\\home.vue?vue&type=template&id=6997abc5&scoped=true&","dependencies":[{"path":"C:\\Users\\86183\\Desktop\\客中行\\While-Journey-main\\Page Design\\zyx_pc_web\\foodies\\src\\views\\Home\\home.vue","mtime":1643538711882},{"path":"C:\\Users\\86183\\Desktop\\客中行\\While-Journey-main\\Page Design\\zyx_pc_web\\foodies\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86183\\Desktop\\客中行\\While-Journey-main\\Page Design\\zyx_pc_web\\foodies\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\86183\\Desktop\\客中行\\While-Journey-main\\Page Design\\zyx_pc_web\\foodies\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86183\\Desktop\\客中行\\While-Journey-main\\Page Design\\zyx_pc_web\\foodies\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJkaXYiLAogICAgeyBzdGF0aWNDbGFzczogImhvbWUiIH0sCiAgICBbCiAgICAgIF9jKAogICAgICAgICJlbC1yb3ciLAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZWwtbWVudSIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImVsLW1lbnUtZGVtbyIsCiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIHJvdXRlcjogIiIsCiAgICAgICAgICAgICAgICAiZGVmYXVsdC1hY3RpdmUiOiBfdm0uJHJvdXRlLnBhdGgsCiAgICAgICAgICAgICAgICBtb2RlOiAiaG9yaXpvbnRhbCIsCiAgICAgICAgICAgICAgICAiYmFja2dyb3VuZC1jb2xvciI6ICIjNTQ1YzY0IiwKICAgICAgICAgICAgICAgICJ0ZXh0LWNvbG9yIjogIiNmZmYiLAogICAgICAgICAgICAgICAgImFjdGl2ZS10ZXh0LWNvbG9yIjogIiNmZmQwNGIiLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgb246IHsgc2VsZWN0OiBfdm0uaGFuZGxlU2VsZWN0IH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZWwtbWVudSIpLAogICAgICAgICAgICAgIF9jKCJlbC1tZW51LWl0ZW0iLCB7IGF0dHJzOiB7IGluZGV4OiAiL2hvbWUiIH0gfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCLpppYg6aG1IiksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImVsLW1lbnUtaXRlbSIsIHsgYXR0cnM6IHsgaW5kZXg6ICIvc2hvcHBpbmciIH0gfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCLotK0g54mpIiksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImVsLW1lbnUtaXRlbSIsIHsgYXR0cnM6IHsgaW5kZXg6ICIvbGlzdCIgfSB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIuiuoiDljZUiKSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInRvbG9naW4iIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJlbC1idXR0b24iLAogICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdHlwZTogInByaW1hcnkiIH0sIG9uOiB7IGNsaWNrOiBfdm0udG9Mb2dpbiB9IH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigi55m75b2VIildCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKCJlbC1idXR0b24iLCB7IG9uOiB7IGNsaWNrOiBfdm0udG9SZWdpc3RlciB9IH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIuazqOWGjCIpLAogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJlbC1zdWJtZW51IiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgaW5kZXg6ICIvbWluZSIgfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygidGVtcGxhdGUiLCB7IHNsb3Q6ICJ0aXRsZSIgfSwgW192bS5fdigiIOaIkSDnmoQg5raIIOaBryAiKV0pLAogICAgICAgICAgICAgICAgICBfYygiZWwtbWVudS1pdGVtIiwgeyBhdHRyczogeyBpbmRleDogIjItMSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCLpgInpobkxIiksCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygiZWwtbWVudS1pdGVtIiwgeyBhdHRyczogeyBpbmRleDogIjItMiIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCLpgInpobkyIiksCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygiZWwtbWVudS1pdGVtIiwgeyBhdHRyczogeyBpbmRleDogIjItMyIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCLpgInpobkzIiksCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZWwtc3VibWVudSIsCiAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBpbmRleDogIjItNCIgfSB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJ0ZW1wbGF0ZSIsIHsgc2xvdDogInRpdGxlIiB9LCBbX3ZtLl92KCLpgInpobk0IildKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJlbC1tZW51LWl0ZW0iLCB7IGF0dHJzOiB7IGluZGV4OiAiMi00LTEiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIumAiemhuTEiKSwKICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoImVsLW1lbnUtaXRlbSIsIHsgYXR0cnM6IHsgaW5kZXg6ICIyLTQtMiIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigi6YCJ6aG5MiIpLAogICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICBfYygiZWwtbWVudS1pdGVtIiwgeyBhdHRyczogeyBpbmRleDogIjItNC0zIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCLpgInpobkzIiksCiAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDIKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAyCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoImVsLXJvdyIsIFsKICAgICAgICBfYygKICAgICAgICAgICJkaXYiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImx1bmJvdHUiIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJlbC1jYXJvdXNlbCIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgaW50ZXJ2YWw6IDQwMDAsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICJjYXJkIiwKICAgICAgICAgICAgICAgICAgdHJpZ2dlcjogImNsaWNrIiwKICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMzUwcHgiLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIF92bS5fbCg2LCBmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgcmV0dXJuIF9jKCJlbC1jYXJvdXNlbC1pdGVtIiwgeyBrZXk6IGl0ZW0gfSwgWwogICAgICAgICAgICAgICAgICBfYygiaDMiLCB7IHN0YXRpY0NsYXNzOiAibWVkaXVtIiB9LCBbX3ZtLl92KF92bS5fcyhpdGVtKSldKSwKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApLAogICAgICAgICAgXSwKICAgICAgICAgIDEKICAgICAgICApLAogICAgICBdKSwKICAgICAgX2MoImVsLXJvdyIsIHsgYXR0cnM6IHsgZ3V0dGVyOiAyNCB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJkaXYiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImlucHV0IiB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZWwtY29sIiwKICAgICAgICAgICAgICB7IGF0dHJzOiB7IHNwYW46IDIyIH0gfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiZWwtaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHBsYWNlaG9sZGVyOiAi6K+36L6T5YWl5YaF5a65IiwgY2xlYXJhYmxlOiAiIiB9LAogICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uaW5wdXQsCiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uICgkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgIF92bS5pbnB1dCA9ICQkdgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImlucHV0IiwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZWwtY29sIiwKICAgICAgICAgICAgICB7IGF0dHJzOiB7IHNwYW46IDIgfSB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJlbC1idXR0b24iLCB7IGF0dHJzOiB7IHR5cGU6ICJwcmltYXJ5IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KCLmkJzntKIiKSwKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApLAogICAgICAgICAgXSwKICAgICAgICAgIDEKICAgICAgICApLAogICAgICBdKSwKICAgIF0sCiAgICAxCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}